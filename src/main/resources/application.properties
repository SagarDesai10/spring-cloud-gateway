spring.application.name=api-gateway

server.port = 9093
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
eureka.client.service-url.defaultZone = http://localhost:8761/eureka/
eureka.instance.hostname=localhost


# CORS Configuration for Gateway
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true


spring.cloud.gateway.routes[0].id=SPRING-CONTACT
spring.cloud.gateway.routes[0].uri = lb://CONTACT-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/contacts/**,/endpoint/**
spring.cloud.gateway.routes[0].filters[0]=JwtAuthFilter

spring.cloud.gateway.routes[1].id=SPRING-AUTH
spring.cloud.gateway.routes[1].uri = lb://SPRING-SECURITY
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/auth/**
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin, RETAIN_UNIQUE
#spring.cloud.gateway.default-filters[1]=AddResponseHeader=Access-Control-Allow-Origin, *

spring.cloud.gateway.routes[2].id=SPRING-USERS
spring.cloud.gateway.routes[2].uri = lb://SPRING-SECURITY
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/user/**,/api/v1/admin/**
spring.cloud.gateway.routes[2].filters[0]=JwtAuthFilter
spring.cloud.gateway.routes[2].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.name=exampleCircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.fallbackUri=forward:/fallback/spring-security
spring.cloud.gateway.routes[2].filters[1].args.statusCodes=503
spring.cloud.gateway.routes[2].filters[2].name=Retry
spring.cloud.gateway.routes[2].filters[2].args.retries=2
spring.cloud.gateway.routes[2].filters[2].args.backoff.firstBackoff=1000ms
spring.cloud.gateway.routes[2].filters[2].args.backoff.maxBackoff=3000ms
spring.cloud.gateway.routes[2].filters[2].args.backoff.factor=2
spring.cloud.gateway.routes[2].filters[2].args.backoff.basedOnPreviousValue=false
spring.cloud.gateway.routes[2].filters[2].args.statusCodes=503




#Circuite Breaker
resilience4j.circuitbreaker.instances.exampleCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.exampleCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.exampleCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.exampleCircuitBreaker.waitDurationInOpenState=10000ms
resilience4j.circuitbreaker.instances.exampleCircuitBreaker.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.instances.exampleCircuitBreaker.minimumNumberOfCalls=5






logging.level.org.springframework.cloud.gateway=TRACE
logging.level.org.springframework.cloud.loadbalancer=TRACE
logging.level.com.netflix.eureka=ERROR
logging.level.com.netflix.discovery=ERROR
logging.level.org.springframework.retry.support.RetryTemplate=DEBUG
logging.level.org.springframework.cloud.gateway.filter.factory.RetryGatewayFilterFactory=DEBUG


eureka.client.healthcheck.enabled=true

management.info.env.enabled=true
management.info.build.enabled=true
management.info.git.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true
management.endpoints.web.exposure.include = *
info.application.name = API Gateway Service
info.application.description= Spring api gateway
info.organization = Aurelius Enchapelon

JWT_SECRET_KEY = "q7b7b6fd44aead1880b37b91add189ebbca3ae9537c12dcd85d2a00bc0b28371";

